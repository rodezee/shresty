# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
#worker_processes 1;

env ENTRYPOINT;
env COMMAND;



# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    error_log stderr notice;
    variables_hash_max_size 1024;
    access_log off;
    real_ip_header X-Real-IP;
    charset utf-8;
    lua_package_path "/app/?.lua;;";

    server {
        listen 1080;
        lua_code_cache 'off'; # turn 'on' for production
        resolver 127.0.0.11 valid=10s; #Set the Docker DNS
        add_header Access-Control-Allow-Origin *; #enable CORS to do requests from other domains
        default_type text/html;

        location / {
            root /app/static;
        }

        location /exec {
            add_header Content-Type 'application/json';
            content_by_lua_block {
                require 'shresty'.exec(
                    ngx.var.uri:sub(7),
                    ngx.req.get_headers()['Request-User'],
                    ngx.req.get_headers()['Request-Password'],
                    ngx.req.get_headers()['Authorization'],
                    os.getenv("ENTRYPOINT"),
                    os.getenv("COMMAND")
                    true
                )
            }
        }

        location /headers-dump {
            default_type text/plain;
            content_by_lua_block {
                local h = ngx.req.get_headers()
                for k, v in pairs(h) do
                    ngx.say(string.format("%s: %s", k ,v))
                end
            }
        }
    }

    # Don't reveal OpenResty version to clients.
    server_tokens off;
}
